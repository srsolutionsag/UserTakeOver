var uto = function () {
	var
		actions = {
			init: function (entry_id) {
				let search_field = $(entry_id).find("input[data-role='uto-search-input-field']");
				let url = search_field.data('action');

				search_field.tinyAutocomplete({
					wrapClasses:   'uto-search-field',
					closeOnSelect: false,
					queryProperty: 'usrto_search_term',
					url:           url,
					method:        'get',
					minChars:      3,
					keyboardDelay: 400,
					itemTemplate:  '<a style="" class="il-link link-bulky" href="goto.php?track=1&target=usrto&usr_id={{value}}">\n' +
									   '<span class="bulky-label">{{display}}</span>\n' +
									   '</a>',

					showNoResults:     true,
					noResultsTemplate: '<a style="" class="il-link link-bulky" href="#">\n' +
										   '<span class="bulky-label">...</span>\n' +
										   '</a>',
				}).on("receivedata", function (ev, tinyAutocomplete, json) {
					tinyAutocomplete.el.unbind();

					tinyAutocomplete.el.on("keyup", ".autocomplete-field", $.proxy(tinyAutocomplete.onKeyUp, tinyAutocomplete));
					tinyAutocomplete.el.on(
						"keydown",
						".autocomplete-field",
						$.proxy(tinyAutocomplete.onKeyDown, tinyAutocomplete)
					);
					tinyAutocomplete.el.on(
						"mousedown",
						".autocomplete-item",
						$.proxy(tinyAutocomplete.onClickItem, tinyAutocomplete)
					);


					// tinyAutocomplete.el.find('.autocomplete-field').unbind();
					$("html").one("click", function () {
						search_field.val('');
					});
				});
			}
		};

	return {
		init: actions.init,
	};
};

var il = il || {};
il.Plugins = il.Plugins || {};
il.Plugins.UserTakeOver = il.Plugins.UserTakeOver || {};
il.Plugins.UserTakeOver = uto($);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL3V0by5qcyIsIi4uL3NyYy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dG8gPSBmdW5jdGlvbiAoKSB7XG5cblx0dmFyXG5cdFx0Y3NzICAgICA9IHtcblx0XHRcdGVuZ2FnZWQ6ICdlbmdhZ2VkJ1xuXHRcdH0sXG5cdFx0YWN0aW9ucyA9IHtcblx0XHRcdGluaXQ6IGZ1bmN0aW9uIChlbnRyeV9pZCkge1xuXHRcdFx0XHRsZXQgc2VhcmNoX2ZpZWxkID0gJChlbnRyeV9pZCkuZmluZChcImlucHV0W2RhdGEtcm9sZT0ndXRvLXNlYXJjaC1pbnB1dC1maWVsZCddXCIpO1xuXHRcdFx0XHRsZXQgdXJsID0gc2VhcmNoX2ZpZWxkLmRhdGEoJ2FjdGlvbicpO1xuXG5cdFx0XHRcdHNlYXJjaF9maWVsZC50aW55QXV0b2NvbXBsZXRlKHtcblx0XHRcdFx0XHR3cmFwQ2xhc3NlczogICAndXRvLXNlYXJjaC1maWVsZCcsXG5cdFx0XHRcdFx0Y2xvc2VPblNlbGVjdDogZmFsc2UsXG5cdFx0XHRcdFx0dXJsOiAgICAgICAgICAgdXJsLFxuXHRcdFx0XHRcdG1ldGhvZDogICAgICAgICdnZXQnLFxuXHRcdFx0XHRcdG1pbkNoYXJzOiAgICAgIDMsXG5cdFx0XHRcdFx0a2V5Ym9hcmREZWxheTogNDAwLFxuXHRcdFx0XHRcdGl0ZW1UZW1wbGF0ZTogICc8YSBzdHlsZT1cIlwiIGNsYXNzPVwiaWwtbGluayBsaW5rLWJ1bGt5XCIgaHJlZj1cImdvdG8ucGhwP3RyYWNrPTEmdGFyZ2V0PXVzcl90YWtlb3Zlcl97e3Vzcl9pZH19XCI+XFxuJyArXG5cdFx0XHRcdFx0XHRcdFx0XHQgICAnPHNwYW4gY2xhc3M9XCJidWxreS1sYWJlbFwiPnt7Zmlyc3RuYW1lfX0ge3tsYXN0bmFtZX19ICh7e2xvZ2lufX0pPC9zcGFuPlxcbicgK1xuXHRcdFx0XHRcdFx0XHRcdFx0ICAgJzwvYT4nLFxuXG5cdFx0XHRcdFx0c2hvd05vUmVzdWx0czogICAgIHRydWUsXG5cdFx0XHRcdFx0bm9SZXN1bHRzVGVtcGxhdGU6ICc8YSBzdHlsZT1cIlwiIGNsYXNzPVwiaWwtbGluayBsaW5rLWJ1bGt5XCIgaHJlZj1cIiNcIj5cXG4nICtcblx0XHRcdFx0XHRcdFx0XHRcdFx0ICAgJzxzcGFuIGNsYXNzPVwiYnVsa3ktbGFiZWxcIj4uLi48L3NwYW4+XFxuJyArXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCAgICc8L2E+Jyxcblx0XHRcdFx0fSkub24oXCJyZWNlaXZlZGF0YVwiLCBmdW5jdGlvbiAoZXYsIHRpbnlBdXRvY29tcGxldGUsIGpzb24pIHtcblx0XHRcdFx0XHR0aW55QXV0b2NvbXBsZXRlLmVsLnVuYmluZCgpO1xuXG5cdFx0XHRcdFx0dGlueUF1dG9jb21wbGV0ZS5lbC5vbihcImtleXVwXCIsIFwiLmF1dG9jb21wbGV0ZS1maWVsZFwiLCAkLnByb3h5KHRpbnlBdXRvY29tcGxldGUub25LZXlVcCwgdGlueUF1dG9jb21wbGV0ZSkpO1xuXHRcdFx0XHRcdHRpbnlBdXRvY29tcGxldGUuZWwub24oXG5cdFx0XHRcdFx0XHRcImtleWRvd25cIixcblx0XHRcdFx0XHRcdFwiLmF1dG9jb21wbGV0ZS1maWVsZFwiLFxuXHRcdFx0XHRcdFx0JC5wcm94eSh0aW55QXV0b2NvbXBsZXRlLm9uS2V5RG93biwgdGlueUF1dG9jb21wbGV0ZSlcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHRpbnlBdXRvY29tcGxldGUuZWwub24oXG5cdFx0XHRcdFx0XHRcIm1vdXNlZG93blwiLFxuXHRcdFx0XHRcdFx0XCIuYXV0b2NvbXBsZXRlLWl0ZW1cIixcblx0XHRcdFx0XHRcdCQucHJveHkodGlueUF1dG9jb21wbGV0ZS5vbkNsaWNrSXRlbSwgdGlueUF1dG9jb21wbGV0ZSlcblx0XHRcdFx0XHQpO1xuXG5cblx0XHRcdFx0XHQvLyB0aW55QXV0b2NvbXBsZXRlLmVsLmZpbmQoJy5hdXRvY29tcGxldGUtZmllbGQnKS51bmJpbmQoKTtcblx0XHRcdFx0XHQkKFwiaHRtbFwiKS5vbmUoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRzZWFyY2hfZmllbGQudmFsKCcnKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4ge1xuXHRcdGluaXQ6IGFjdGlvbnMuaW5pdCxcblx0fTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHV0bztcbiIsImltcG9ydCB1dG8gZnJvbSBcIi4vdXRvXCJcblxuaWwgPSBpbCB8fCB7fTtcbmlsLlBsdWdpbnMgPSBpbC5QbHVnaW5zIHx8IHt9O1xuaWwuUGx1Z2lucy5Vc2VyVGFrZU92ZXIgPSBpbC5QbHVnaW5zLlVzZXJUYWtlT3ZlciB8fCB7fTtcbmlsLlBsdWdpbnMuVXNlclRha2VPdmVyID0gdXRvKCQpO1xuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxHQUFHLEdBQUcsWUFBWTtBQUN0QjtBQUNBLENBQUcsSUFBQztBQUNKLEVBR0UsT0FBTyxHQUFHO0FBQ1osR0FBRyxJQUFJLEVBQUUsVUFBVSxRQUFRLEVBQUU7QUFDN0IsSUFBSSxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDckYsSUFBSSxJQUFJLEdBQUcsR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFDO0FBQ0EsSUFBSSxZQUFZLENBQUMsZ0JBQWdCLENBQUM7QUFDbEMsS0FBSyxXQUFXLElBQUksa0JBQWtCO0FBQ3RDLEtBQUssYUFBYSxFQUFFLEtBQUs7QUFDekIsS0FBSyxHQUFHLFlBQVksR0FBRztBQUN2QixLQUFLLE1BQU0sU0FBUyxLQUFLO0FBQ3pCLEtBQUssUUFBUSxPQUFPLENBQUM7QUFDckIsS0FBSyxhQUFhLEVBQUUsR0FBRztBQUN2QixLQUFLLFlBQVksR0FBRyxrR0FBa0c7QUFDdEgsWUFBWSwyRUFBMkU7QUFDdkYsWUFBWSxNQUFNO0FBQ2xCO0FBQ0EsS0FBSyxhQUFhLE1BQU0sSUFBSTtBQUM1QixLQUFLLGlCQUFpQixFQUFFLG9EQUFvRDtBQUM1RSxhQUFhLHdDQUF3QztBQUNyRCxhQUFhLE1BQU07QUFDbkIsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUU7QUFDL0QsS0FBSyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbEM7QUFDQSxLQUFLLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQztBQUNqSCxLQUFLLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzNCLE1BQU0sU0FBUztBQUNmLE1BQU0scUJBQXFCO0FBQzNCLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsZ0JBQWdCLENBQUM7QUFDM0QsTUFBTSxDQUFDO0FBQ1AsS0FBSyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUMzQixNQUFNLFdBQVc7QUFDakIsTUFBTSxvQkFBb0I7QUFDMUIsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxnQkFBZ0IsQ0FBQztBQUM3RCxNQUFNLENBQUM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLFlBQVk7QUFDeEMsTUFBTSxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzNCLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsS0FBSyxDQUFDLENBQUM7QUFDUCxJQUFJO0FBQ0osSUFBSTtBQUNKO0FBQ0EsQ0FBQyxPQUFPO0FBQ1IsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7QUFDcEIsRUFBRSxDQUFDO0FBQ0gsQ0FBQzs7QUNuREQsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUM7QUFDZCxFQUFFLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQzlCLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQztBQUN4RCxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDIn0=
